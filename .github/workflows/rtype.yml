name: rtype

on:
  push:
    branches:
    - main

env:
  MIRROR_URL: "git@github.com:RayanBn/RType.git"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout le code
      uses: actions/checkout@v2

    - name: Set up CMake
      run: |
        sudo apt-get update
        sudo apt-get install libx11-dev libxrandr-dev libxcursor-dev libxi-dev libudev-dev libgl1-mesa-dev
        sudo apt-get install ninja-build
        sudo apt-get install -y build-essential
        sudo apt-get install -y cmake

    - name: Configure le projet avec CMake
      run: |
        git submodule update --init
        cmake -B build

    - name: Construire le projet
      run: cmake --build build

    - name: Exécuter les tests unitaires
      run: ./build/unitTest/test

    - name: Vérifier les tests réussis
      run: |
        if [ $? -eq 0 ]; then
          echo "Tous les tests ont réussi. Configuration du dépôt distant."
        else
          echo "Certains tests ont échoué. Ne pas effectuer de push."
          exit 1
        fi

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout le code
      uses: actions/checkout@v2

    - name: Set up CMake
      run: |
        Invoke-WebRequest -Uri 'https://github.com/Kitware/CMake/releases/download/v3.27.6/cmake-3.27.6-windows-x86_64.msi' -OutFile 'cmake.msi'
        Start-Process -Wait -FilePath 'msiexec' -ArgumentList '/i', 'cmake.msi', '/quiet', '/norestart'
        Remove-Item -Path 'cmake.msi'
        [System.Environment]::SetEnvironmentVariable('Path', "$($env:Path);C:\Program Files\CMake\bin", [System.EnvironmentVariableTarget]::Machine)

    - name: Configure le projet avec CMake
      run: |
        git submodule update --init
        cmake -B build

    - name: Construire le projet
      run: cmake --build build

    - name: Exécuter les tests unitaires
      run: .\build\unitTest\Debug\test.exe

  push:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: ${{ env.MIRROR_URL }}
        ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
